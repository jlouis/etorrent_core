{application, etorrent_core,
    [
    {description, "BitTorrent client in Erlang"},
    {vsn, "1.2.2"},
    {applications, [
        kernel,
        stdlib,
        syntax_tools,compiler,goldrush,lager,
        crypto, asn1, public_key, ssl,
        mimetypes,
        inets,
        crypto2,
        gproc,
        rlimit,
        hackney_lib,
        hackney
      ]},
    {registered, []}, % This is SO wrong
    {modules, []},
    {mod, {etorrent_app, []}},
    {env, [
           %% What port to listen on. Currently, etorrent will bind to
           %% all available interfaces and there is no way to limit
           %% the binding to some interfaces only.
           {port, 1729},

           %% The port used for UDP messaging
           {udp_port, 3722},

           %% Wether or not to use Azureus/Vuze DHT and the regular DHT
           {azdht, true},
           {dht, true}, {dht_port, 3723},
           
           %% Use the PEX (Peer exchange) extension or not?
           {pex, false},

           %% The DHT subsystem stores its internal state between runs
           %% in a state file The following setting defines the
           %% location of this file
           {dht_state, "spool/dht.state.bin"},
           
           %% Enable UPnP subsystem, which tries to open port mappings in
           %% UPnP-aware routers for etorrent.
           {use_upnp, false},

           %% The directory to watch for .torrent files and the
           %% directory to download data into
           {dir, "data"},

           %% The directory to download data into. It is optional,
           %% if not defined used 'dir' value.
           % {download_dir, "data"},

           %% Interval in seconds to check directory for new .torrent
           %% files
           {dirwatch_interval, 20 },

           %% Location of the log file
           {logger_dir, "log"},

           %% Name of the log file. Etorrent will stamp out simple
           %% messages here whenever progress is made in the system.
           {logger_fname, "etorrent.log"},

           %% Location of the fast resume file. If present this file
           %% is used to populate the fast- resume table, so startup
           %% is much faster. Every 5 minutes the file is stamped out,
           %% so an eventual death of the system won't affect too
           %% much. It is also written upon graceful termination.
           %% NOTE: The directory for the fast resume file must exist, or etorrent will crash.
           {fast_resume_file, "spool/fast_resume.dets"},

           %% Limit on the number of peers the system can maximally be connected to
           {max_peers, 200},

           %% The download/upload rate of the system.
           {max_download_rate, 1200},
           {max_upload_rate, 1200},

           %% Number of upload slots. Either an integer or 'auto'. We
           %% recommend 'auto' as this will calculate a sane number of
           %% upload slots from the upload_rate. If this is set too
           %% low, you will not saturate the outbound bandwidth. If
           %% set too high, peers will not like the client as it can
           %% only give bad rates to all peers.
           {max_upload_slots, auto},

           %% High and low watermarks for the file system processes.
           %% Etorrent will not open more on-disk files than the limit
           %% given here.
           {fs_watermark_high, 128},
           {fs_watermark_low, 100},

           %% Number of optimistic upload slots. If your line is
           %% really fast, consider increasing this a little bit.
           {min_uploads, 2},

           %% The preallocation strategy to use when creating new
           %% files. The default is "sparse" which creates a sparse
           %% file on the disk. Some file systems are bad at working
           %% with sparse files, most notably FreeBSDs default file
           %% system. The other option here is "preallocate" which
           %% means the system will fill the file up on disk before
           %% using it.
           {preallocation_strategy, sparse },

           %% Enable the Web user interface in etorrent, on 127.0.0.1:8080
           {webui, true},

           %% Enable logging in the webui
           {webui_logger_dir, "log/webui"},

           %% The address to bind the webui on. Notice that is has to
           %% be given as a tuple for an IP address and as a string
           %% for a domain name.
           {webui_bind_address, {127,0,0,1}},

           %% The port to use for the webui
           {webui_port, 8080},

           %% Enable profiling; do not enable unless you need it
           {profiling, false}]}
    ]
}.









